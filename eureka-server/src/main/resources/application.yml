spring:
  application:
    name: spring-cloud-eureka
  profiles: default
server:
  port: 9000
eureka:
  instance:
    #设置实例的hostname
    hostname: eureka-default.com
    instance-id: springcloud-eurekaserver-default
  client:
    #不将eureka server 注册进来，会提示unavailable-replicas
    #默认情况下，Eureka Server会向自己注册，这时需要配置eureka.client.registerWithEureka 和 eureka.client.fetchRegistry为false，防止自己注册自己。
    register-with-eureka: false
    fetch-registry: false
    service-url:
      #defaultZone中填写的URL必须包括后缀/eureka，否则各eureka server之间不能通信
      #defaultZone为默认的Zone，来源于AWS的概念。区域（Region）和可用区（Availability Zone,AZ）是AWS的另外两个概念。区域是指服务器所在的区域，
      #比如北美洲、南美洲、欧洲和亚洲等，每个区域一般由多个可用区组成。 在本案例中defaultZone是指Eureka Server的注册地址。
      defaultZone: http://localhost:${server.port}/eureka #集群的时候使用
      #http://${eureka.instance.hostname}:${server.port}/eureka/  #eureka单机模式的时候使用，指向自己。
#actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
---
spring:
  application:
    name: spring-cloud-eureka
  profiles: peer1
server:
  port: 7001
eureka:
  instance:
    #设置实例的hostname
    hostname: eureka7001.com
    instance-id: springcloud-eurekaserver-7001
    #作为Eureka Client，把实例的ip的信息注册到eureka server中。
    prefer-ip-address: true
  client:
    #不将eureka server 注册进来，会提示unavailable-replicas
    #默认情况下，Eureka Server会向自己注册，这时需要配置eureka.client.registerWithEureka 和 eureka.client.fetchRegistry为false，防止自己注册自己。
    register-with-eureka: true
    fetch-registry: true
    service-url:
      #defaultZone中填写的URL必须包括后缀/eureka，否则各eureka server之间不能通信
      #defaultZone为默认的Zone，来源于AWS的概念。区域（Region）和可用区（Availability Zone,AZ）是AWS的另外两个概念。区域是指服务器所在的区域，
      #比如北美洲、南美洲、欧洲和亚洲等，每个区域一般由多个可用区组成。 在本案例中defaultZone是指Eureka Server的注册地址。
      defaultZone: http://eureka7002.com:7002/eureka,http://eureka7003.com:7003/eureka #eureka集群的时候使用
      #http://${eureka.instance.hostname}:${server.port}/eureka/  #eureka单机模式的时候使用，指向自己。
#actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
---
spring:
  profiles: peer2
  application:
    name: spring-cloud-eureka
server:
  port: 7002
eureka:
  instance:
    hostname: eureka7002.com
    instance-id: springcloud-eurekaserver-7002
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7003.com:7003/eureka #eureka集群的时候使用
management:
  endpoints:
    web:
      exposure:
        include: "*"
---
spring:
  profiles: peer3
  application:
    name: spring-cloud-eureka
server:
  port: 7003
eureka:
  instance:
    hostname: eureka7003.com
    instance-id: springcloud-eurekaserver-7003
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka #eureka集群的时候使用
management:
  endpoints:
    web:
      exposure:
        include: "*"